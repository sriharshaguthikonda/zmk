/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * &kp K_MENU 		-doesnt work!
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define DEFAULT 	0
#define FUNCTION	1
#define MEDIA		2

#define NONE 0

#define MO_CAPS(layer) &mo_caps layer layer   // Macro to apply momentary-caps-on-hold to a specific layer

&mt {
    tapping-term-ms = <200>;
};


&sl {
    release-after-ms = <2000>;
};

/ {
 /*		macros {
  * 	        win_H: win_H{
  *	            label = "win_H";
  * 	            compatible = "zmk,behavior-macro";
  *		            #binding-cells = <0>;
  * 	            bindings
  *                   = <&macro_press &kp LGUI>
  * 	                , <&macro_tap &kp H>
  *  	                , <&macro_release &kp LGUI>
  *             ;
  *       };
  *   };
  */

 	  behaviors {

    mo_caps: behavior_mo_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_caps";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
//&mo_caps 3 1  to use this function will momentorily go to 3rd layer and tap to toggle to 1st layer

    tdf: tap_dance_forward {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_FORWARD";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp C_FAST_FORWARD>, <&kp C_NEXT>, <&kp C_NEXT>;
        };

 	tdr: tap_dance_rewind {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_REWIND";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp C_REWIND>, <&kp C_PREVIOUS>, <&kp C_PREVIOUS>;
        };
	
	WinH: Windows_H{
            compatible = "zmk,behavior-tap-dance";
            label = "WinH";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp F>, <&kp F>, <&kp LG(H)>;
        };
// use it like this "&WinH" 



   /*	     Stalt: Spc_to_alt_tab{
    * 	         compatible = "zmk,behavior-mod-morph";
    *	         label = "SPACETOALT";
    * 	         #binding-cells = <0>;
    * 	         bindings = <&kp SPACE>, <&kp LALT>;
    * 		mods = <(MOD_RSFT)>;
    *   	         keep-mods = <(MOD_LSFT)>;
    * 	     };
    */ 	     
	  };



    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ----------------------------------------------
            // |  TAB  |  Q   |  W   |  E   |  R   |  T   |  
            // | SHIFT |  A   |  S   |  D   |  F   |  G   |  
            // | CTRL  |  Z   |  X   |  C   |  V   |  B   |  
            // |ADJUST | LCTL | LALT | LGUI | LOWR | 
            bindings = <
		&kp TAB 			&kp Q        		&kp W       		&kp E    		&kp R      			&kp T
                &kp CAPSLOCK  	   		&kp A        		&kp S       		&kp D    		&kp F     			&kp G
                &kp LSHIFT		  	&kp Z			&kp Z			&kp X 			&kp C 			        &kp V
                &kp LCTRL 		    	&kp LGUI 		&kp LALT 		&kp LALT 		&kp K_CONTEXT_MENU	   	&kp SPACE
                &trans			    	&trans			&kp LALT		&sl MEDIA		&sl FUNCTION		    	&caps_word
    		        >;
    		    };

 	Function_layer {
            // -------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |
            // |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |
            // |   ~  |  !   |  @   |  #   |  $   |  %   |
            // |BOOTLD|BOOTLD|BOOTLD|BOOTLD|BOOTLD|
        bindings = <
		&trans    		&kp LEFT_ARROW		&kp DOWN_ARROW    	&kp UP_ARROW   		&kp RIGHT_ARROW    	&kp N5
                &kp F1			&kp F2   		&kp F3   		&kp F4   		&kp F5			&kp F6
                &kp F13			&kp F14   		&kp F15   		&kp F16   		&kp F17			&kp F18
                &trans			&trans			&trans			&trans			&trans			&trans
                &trans			&trans			&trans			&trans			&trans			&bootloader
		>;
	     };

	Media_layer {
            // -------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |  
            // |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |
            // |   ~  |  !   |  @   |  #   |  $   |  %   |
            // |BOOTLD|BOOTLD|BOOTLD|BOOTLD|BOOTLD|
          bindings = <
		        &kp GRAVE		&kp N1			    &kp N2      		&kp N3   		&kp N4     		&kp N5
 		        &kp C_PIP       	&tdr			    &kp C_PREVIOUS 		&kp C_PLAY_PAUSE	&kp C_NEXT              &tdf
                	&trans			&trans			    &kp C_VOLUME_DOWN    	&kp C_PAUSE		&kp C_VOLUME_UP	        &trans
                	&kp F1			&kp K_VOLUME_DOWN2	    &kp C_VOLUME_DOWN		&kp C_VOLUME_UP		&kp K_VOLUME_UP2	&kp N3
                	&trans			&trans			    &trans			&trans			&trans			 &none
            >;
        };
	
    };
};